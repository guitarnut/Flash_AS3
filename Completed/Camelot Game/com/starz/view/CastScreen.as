package com.starz.view{	import com.starz.view.components.GameScreen;	import com.greensock.TweenLite;	import flash.events.MouseEvent;	import com.starz.events.GameEvent;	import flash.display.MovieClip;	import com.starz.view.components.MovieclipButton;	import flash.filters.GlowFilter;	public class CastScreen extends GameScreen	{		private static const TWEEN_SPEED:Number = .5;		private var _textY:Number;		private var _glow:GlowFilter = new GlowFilter(0xFFFFFF,.8,3,3,3,3,false,false);		private var _filters:Array = new Array();		private var _currentCharacter:MovieClip;		private var _currentButton:MovieclipButton;		private var _characterTween:TweenLite;		private var _textTween:TweenLite;		private var _selected:Object;		/* Descriptions */		private var _arthur:String = "A handsome, carefree young man, Arthur is torn from his home and family upon learning he is the only male heir to the throne as a result of the king's untimely death. Arthur's intense education in a dark, unruly world inspires him to pursue a kingdom based on justice, hope, and freedom from tyranny while the lands he oversees are corrupted by violence, greed, and despair.";		private var _morgan:String = "The beautiful and ruthlessly ambitious Morgan, daughter of King Uther, wishes to claim her right to her father’s throne. But she has not counted on Merlin’s plans or the existence of Arthur, her newly revealed half brother. In her pursuit of power, Morgan gives herself over to dark forces that allow her to threaten the court of Camelot from within.";		private var _merlin:String = "The sorcerer is creator and custodian of the legend of Camelot. As Arthur’s greatest and most powerful ally, Merlin believes in him even more than Arthur believes in himself. He can foresee the threats to his king more clearly than anyone, but he must fight the dark nature of his power and harness it to bring forth a new Camelot.";		private var _kay:String = "Fiercely loyal to his brother with whom he has shared everything since childhood, Kay encourages Arthur to take up his destiny as King of Britain. As the king’s Marshal - the supreme force of law in the Kingdom – Kay has the freedom to become his own man, but will always remain Arthur’s older brother and closest friend.";		private var _gawain:String = "Once a great knight, Gawain has become disillusioned and has lost his way in life. Kay and Leontes recruit him to join the court of Camelot as a warrior. Although reluctant at first, he comes to Camelot and realizes Arthur is different and not just another warlord. Inspired, he finds reason to fight and train Arthur’s men.";		private var _guin:String = "Pure-of-heart Guinevere may be innocent and naïve, but her ambition and strong will makes her a source of great support and strength to Arthur as he grows into his role as king. Although she is betrothed to Leontes, one of Arthur’s most loyal knights, she cannot deny the attraction she and Arthur feel for each other.";		private var _leontes:String = "One of King Uther’s bravest knights, Leontes pledges his loyalty to the new king after his master’s death and joins Arthur in Camelot. Betrothed to Guinevere, his loyalty and experience are invaluable to the young king as he attempts to secure order in a land beset by violence and threats from rivals to the throne.";		private var _igraine:String = "Arthur’s birth mother and second wife of King Uther, Igraine is estranged from her son and despised by her step-daughter Morgan. She has lived a life of deep pain and agony, but has never lost her faith or her heart. Igraine quickly becomes an ally and figure of strength not only for Arthur but the entire court of Camelot.";		public function CastScreen()		{			init();		}		private function init():void		{			_textY = characterText.y;			_currentCharacter = arthur;			_currentButton = arthurButton;						backButton.addEventListener(MouseEvent.CLICK, closeCast);			_filters.push(_glow);			highlightButton(arthurButton);			bindButton(arthurButton, arthur, _arthur);			bindButton(merlinButton, merlin, _merlin);			bindButton(morganButton, morgan, _morgan);			bindButton(kayButton, kay, _kay);			bindButton(gawainButton, gawain, _gawain);			bindButton(guinButton, guin, _guin);			bindButton(leontesButton, leontes, _leontes);			bindButton(igraineButton, igraine, _igraine);			hideCharacters();		}		private function bindButton(buttonName:MovieclipButton, character:MovieClip, characterText:String):void		{			buttonName.bind.character = character;			buttonName.bind.text = characterText;			buttonName.addEventListener(MouseEvent.CLICK, hideCharacter);		}		private function hideCharacters():void		{			morgan.alpha = 0;			merlin.alpha = 0;			gawain.alpha = 0;			igraine.alpha = 0;			guin.alpha = 0;			kay.alpha = 0;			leontes.alpha = 0;		}		private function hideCharacter(e:MouseEvent = null):void		{			if (MovieclipButton(e.target).bind.character != _currentCharacter)			{				hideText(MovieclipButton(e.target));				_characterTween = new TweenLite(_currentCharacter,TWEEN_SPEED,{alpha:0,onComplete:showCharacter,onCompleteParams:new Array(e.target)});			}		}		public function showCast():void		{			playMusic(new TriviaMusic(), true);		}		private function showCharacter(character:MovieclipButton):void		{			_characterTween = new TweenLite(character.bind.character,TWEEN_SPEED,{alpha:1});			_currentCharacter = character.bind.character;			highlightButton(character, _currentButton);			_currentButton = MovieclipButton(character);		}		private function highlightButton(newbutton:*, oldbutton:* = null):void		{			newbutton.getChildAt(1).filters = _filters;			if (oldbutton)			{				oldbutton.getChildAt(1).filters = null;			}		}		private function hideText(character:MovieclipButton):void		{			_textTween = new TweenLite(characterText,TWEEN_SPEED,{y:characterText.y + characterText.height,onComplete:swapText,onCompleteParams:new Array(character)});		}		private function showText():void		{			_textTween = new TweenLite(characterText,TWEEN_SPEED,{y:_textY});		}		private function swapText(character:MovieclipButton):void		{			characterText.description.text = character.bind.text;			showText();		}		private function closeCast(e:MouseEvent):void		{			dispatchEvent(new GameEvent(GameEvent.LEVEL_COMPLETE));		}	}}