package com.starz.view.screens{	import com.starz.view.components.SimpleMC;	import com.starz.view.components.CastBio;	import flash.utils.getDefinitionByName;	import flash.utils.getQualifiedClassName;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.display.MovieClip;	public class CastPage extends SimpleMC	{		public static const LEFT_EDGE:Number = -330;		public static const RIGHT_EDGE:Number = 344;		public static const Y_POS:Number = 70;		public var PADDING:Number = 22;		private var _cast:Array;		public function CastPage()		{			init();		}		private function init():void		{			storeCastBios();			positionCast();			addEventListeners();			b_left.showButton();			b_right.showButton();						MovieClip(getChildAt(numChildren-1)).addEventListener(MouseEvent.CLICK, handleCloseButton);		}		private function handleCloseButton(e:MouseEvent):void		{			dispatchEvent(new Event(Event.COMPLETE));		}		private function positionCast():void		{			var count:Number = 0;			for each (var cast:CastBio in _cast)			{				if (count == 0)				{					cast.x = LEFT_EDGE;				}				else				{					cast.x = (_cast[count-1].width + PADDING)*count + LEFT_EDGE;				}				cast.y = Y_POS;				checkPosition(cast);				count++;			}		}		private function storeCastBios():void		{			_cast = new Array();			for (var i:Number = 0; i < numChildren; i++)			{				var $d:* = getChildAt(i);				var superClassName:String = flash.utils.getQualifiedSuperclassName($d);				var superClass:Class = flash.utils.getDefinitionByName(superClassName) as Class;				if (String(superClass) == '[class CastBio]')				{					_cast.push($d);				}			}		}		private function addEventListeners():void		{			b_left.addEventListener(MouseEvent.CLICK, moveBios);			b_right.addEventListener(MouseEvent.CLICK, moveBios);		}		private function moveBios(e:MouseEvent):void		{			switch (e.target.name)			{				case 'b_left' :					if (_cast[_cast.length - 1].x > RIGHT_EDGE)					{						b_left.toggleButton(true);						b_right.toggleButton(true);						for each (var castLeft:CastBio in _cast)						{							castLeft.moveLeft();						}					}					else					{						b_left.toggleButton();					}					break;				case 'b_right' :					if (_cast[0].x < LEFT_EDGE)					{						b_left.toggleButton(true);						b_right.toggleButton(true);						for each (var castRight:CastBio in _cast)						{							castRight.moveRight();						}					}					else					{						b_right.toggleButton();					}					break;			}		}		public function checkPosition($d:CastBio):void		{			if (($d.x >= LEFT_EDGE)&&($d.x <= RIGHT_EDGE))			{				//$d.showMC();			}			else			{				//$d.dimMC();			}		}	}}