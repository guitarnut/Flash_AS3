package com.starz.view.screens{	import com.starz.view.components.SimpleMC;	import flash.events.MouseEvent;	import flash.net.URLRequest;	import flash.events.Event;	import flash.display.Loader;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.display.Shape;	import flash.display.LoaderInfo;	import com.starz.view.components.TButton;	import flash.display.Bitmap;	import flash.display.MovieClip;	public class GalleryPage extends SimpleMC	{		private static const IMG_PATH:String = 'gallery/';		private static const IMG_THUMB_SCALE:Number = 0.37;		private var _loader:Loader;		private var _images:Array;		private var _fullsizeImages:Array;		private var _thumbnails:Array;		private var _loadCount:Number;		public function GalleryPage()		{			init();		}		private function init():void		{			showImages();			addListeners();			_loadCount = 0;			_thumbnails = new Array();			_thumbnails.push(b_thumb1,b_thumb2,b_thumb3,b_thumb4,b_thumb5,b_thumb6);			_fullsizeImages = new Array();						MovieClip(getChildAt(numChildren-1)).addEventListener(MouseEvent.CLICK, handleCloseButton);		}		private function handleCloseButton(e:MouseEvent):void		{			dispatchEvent(new Event(Event.COMPLETE));		}		private function loadImages():void		{			_loader = new Loader();			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, createThumbnail);			_loader.load(new URLRequest(IMG_PATH+_images[_loadCount]));		}		private function createThumbnail(e:Event):void		{			var rect:Shape = new Shape();			rect.graphics.beginFill(0xFFFFFF);			rect.graphics.drawRect(0, 0, _thumbnails[_loadCount].width, _thumbnails[_loadCount].height);			rect.graphics.endFill();			_thumbnails[_loadCount].addChild(rect);			_fullsizeImages.push(new Bitmap(Bitmap(_loader.content).bitmapData));			_loader.mask = rect;			_thumbnails[_loadCount].addChild(_loader);			_loader.scaleX = IMG_THUMB_SCALE;			_loader.scaleY = IMG_THUMB_SCALE;			_loader.x = 0;			_loader.y = -15;						_loadCount++;			if (_loadCount < _images.length)			{				loadImages();			}			else			{				switchImage();			}		}		private function addListeners():void		{			b_thumb1.addEventListener(MouseEvent.CLICK, switchImage);			b_thumb2.addEventListener(MouseEvent.CLICK, switchImage);			b_thumb3.addEventListener(MouseEvent.CLICK, switchImage);			b_thumb4.addEventListener(MouseEvent.CLICK, switchImage);			b_thumb5.addEventListener(MouseEvent.CLICK, switchImage);			b_thumb6.addEventListener(MouseEvent.CLICK, switchImage);		}		private function showImages():void		{			mc_image.showMC();			b_thumb1.showButton();			b_thumb2.showButton();			b_thumb3.showButton();			b_thumb4.showButton();			b_thumb5.showButton();			b_thumb6.showButton();		}		private function switchImage(e:MouseEvent=null):void		{			var selectedImage:*;						if (mc_image.numChildren > 1)			{				//Remove the mask				mc_image.removeChildAt(1);				//Remove the image				mc_image.removeChildAt(1);			}			if (e)			{				var image:Number;								switch (e.target.name) {					case 'b_thumb1':					image=0;					break;					case 'b_thumb2':					image=1;					break;					case 'b_thumb3':					image=2;					break;					case 'b_thumb4':					image=3;					break;					case 'b_thumb5':					image=4;					break;					case 'b_thumb6':					image=5;					break;				}				selectedImage=_fullsizeImages[image];			}			else			{				selectedImage=_fullsizeImages[0];			}						var rect:Shape = new Shape();			rect.graphics.beginFill(0xFFFFFF);			rect.graphics.drawRect(0, 0, mc_image.width, mc_image.height);			rect.graphics.endFill();			mc_image.addChild(rect);			selectedImage.mask = rect;			mc_image.addChild(selectedImage);		}		public function set content($c:Array):void		{			_images = new Array();			_images = $c;						loadImages();		}	}}