package com.starz.view.components{	import flash.display.MovieClip;	import com.starz.constants.ApplicationSettings;	import com.greensock.TweenLite;	import com.greensock.easing.*;	import flash.events.Event;	import flash.events.MouseEvent;	public class AnimatedGallery extends SimpleMC	{		private static const TWEEN_SPEED:Number = .75;		private static const DELAY:Number = 2;		private var _image:Array;		private var _imagePosition:Number;		private var _nextImage:Number;		private var _prevImage:Number;		private var _middleImage:MovieClip;		private var _rightImage:MovieClip;		private var _leftImage:MovieClip;		private var _newImage:MovieClip;		private var _paused:Boolean;		public function AnimatedGallery()		{			init();		}		private function init():void		{			_image = new Array();			_paused = true;			storeImages();			removeImages();			layoutGallery();			addListeners();		}		private function storeImages():void		{			for (var i:Number = 0; i < numChildren-2; i++)			{				_image.push(getChildAt(i));			}		}		private function removeImages():void		{			for (var j:Number = numChildren-3; j >= 0; j--)			{				removeChildAt(j);			}		}		private function layoutGallery():void		{			_nextImage = 3;			_prevImage = _image.length-1;						_rightImage = _image[2];			_middleImage = _image[1];			_leftImage = _image[0];			_rightImage.x = ApplicationSettings.STAGE_WIDTH / 2;			_rightImage.alpha = .5;			_leftImage.x = -1*(ApplicationSettings.STAGE_WIDTH/2);			_leftImage.alpha = .5;			_middleImage.x = 0;			_middleImage.alpha = 1;			addChildAt(_middleImage, 0);			addChildAt(_rightImage, 0);			addChildAt(_leftImage, 0);		}		private function addListeners():void		{			prevButton.addEventListener(MouseEvent.CLICK, animate);			nextButton.addEventListener(MouseEvent.CLICK, animate);			prevButton.showButton();			nextButton.showButton();		}		private function animate(e:MouseEvent):void		{			if (! _paused)			{				_paused = true;				if (e.target == prevButton)				{					_newImage = _image[_prevImage];					_newImage.x = -1*(ApplicationSettings.STAGE_WIDTH);					_newImage.alpha = 0;					addChildAt(_newImage, 0);					new TweenLite(_newImage,TWEEN_SPEED,{x:-1*(ApplicationSettings.STAGE_WIDTH)/2,alpha:.5, ease: Quad.easeInOut});					new TweenLite(_leftImage,TWEEN_SPEED,{x:0,alpha:1, ease: Quad.easeInOut});					new TweenLite(_middleImage,TWEEN_SPEED,{x:ApplicationSettings.STAGE_WIDTH / 2,alpha:.5, ease: Quad.easeInOut});					new TweenLite(_rightImage,TWEEN_SPEED,{x:ApplicationSettings.STAGE_WIDTH,alpha:0,ease: Quad.easeInOut,onComplete:reassignImagesPrevious});										_nextImage--;					_prevImage--;					if (_nextImage < 0)					{						_nextImage = _image.length - 1;					}					if (_prevImage < 0)					{						_prevImage = _image.length - 1;					}				}				if (e.target == nextButton)				{					_newImage = _image[_nextImage];					_newImage.x = ApplicationSettings.STAGE_WIDTH;					_newImage.alpha = 0;					addChildAt(_newImage, 0);					new TweenLite(_newImage,TWEEN_SPEED,{x:ApplicationSettings.STAGE_WIDTH / 2,alpha:.5, ease: Quad.easeInOut});					new TweenLite(_leftImage, TWEEN_SPEED, {x:-1*(ApplicationSettings.STAGE_WIDTH), alpha:0, ease: Quad.easeInOut});					new TweenLite(_middleImage, TWEEN_SPEED, {x:-1*(ApplicationSettings.STAGE_WIDTH/2), alpha:.5, ease: Quad.easeInOut});					new TweenLite(_rightImage,TWEEN_SPEED,{x:0,alpha:1,ease: Quad.easeInOut,onComplete:reassignImagesNext});										_nextImage++;					_prevImage++;					if (_nextImage >= _image.length)					{						_nextImage = 0;					}					if (_prevImage >= _image.length)					{						_prevImage = 0;					}				}			}		}		private function reassignImagesPrevious():void		{			removeChild(_rightImage);			_rightImage = _middleImage;			_middleImage = _leftImage;			_leftImage = _newImage;			_paused = false;		}		private function reassignImagesNext():void		{			removeChild(_leftImage);			_leftImage = _middleImage;			_middleImage = _rightImage;			_rightImage = _newImage;			_paused = false;		}		public function pauseGallery(e:Event = null):void		{			_paused = true;		}		public function playGallery():void		{			_paused = false;		}	}}