package com.starz.view.components{	import flash.display.MovieClip;	import com.greensock.TweenLite;	import com.starz.constants.ApplicationSettings;	import com.greensock.OverwriteManager;	public class SimpleMC extends MovieClip	{		protected static const TWEEN_SPEED:Number = .25;		protected static const OFFSET:Number = 150;		private var _startingX:Number;		private var _startingY:Number;		private var _dontHide:Boolean;		public function SimpleMC()		{			init();		}		private function init():void		{			alpha = 0;			visible = false;			_startingX = x;			_startingY = y;		}		public function showMC(d$:Number = 0):void		{			visible = true;			new TweenLite(this,TWEEN_SPEED,{alpha:1,delay:d$});		}		public function hideMC(d$:Number = 0):void		{			new TweenLite(this,TWEEN_SPEED,{alpha:0,delay:d$, onComplete: invisible});		}		public function dimMC(d$:Number = 0):void		{			visible = true;			new TweenLite(this,TWEEN_SPEED,{alpha:.2,delay:d$});		}		public function enterTop(d$:Number = 0):void		{			y = _startingY - OFFSET;			showMC(d$);			new TweenLite(this,TWEEN_SPEED,{y:_startingY,delay:d$});		}		public function enterBottom(d$:Number = 0):void		{			y = _startingY + OFFSET;			showMC(d$);			new TweenLite(this,TWEEN_SPEED,{y:_startingY,delay:d$});		}		public function enterLeft(d$:Number = 0):void		{			x = _startingX - OFFSET;			showMC(d$);			new TweenLite(this,TWEEN_SPEED,{x:_startingX,delay:d$});		}		public function enterRight(d$:Number = 0):void		{			x = _startingX + OFFSET;			showMC(d$);			new TweenLite(this,TWEEN_SPEED,{x:_startingX,delay:d$});		}		public function position(p$):void		{			switch (p$)			{				case "left" :					x = -this.width;					break;				case "right" :					x = ApplicationSettings.STAGE_WIDTH + this.width;					break;				case "top" :					y = -this.height;					break;				case "bottom" :					y = ApplicationSettings.STAGE_HEIGHT + this.height;					break;			}		}		public function get startingX():Number		{			return _startingX;		}		public function get startingY():Number		{			return _startingY;		}		public function set hidden(b$:Boolean):void		{			if (! b$)			{				alpha = 1;				visible=true;			}			_dontHide = b$;		}		protected function invisible():void {			visible = false;		}		protected function destroy():void		{			MovieClip(this.parent).removeChild(this);		}	}}