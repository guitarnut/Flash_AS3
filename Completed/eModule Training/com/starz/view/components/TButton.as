package com.starz.view.components{	import flash.display.MovieClip;	import flash.events.MouseEvent;	import com.greensock.TweenLite;	public class TButton extends MovieClip	{		private static const TWEEN_SPEED:Number = .25;		private static const BUTTON_OFF:Number = .85;		private static const BUTTON_DISABLED:Number = .45;		private var _active:Boolean = true;		private var _buttonShowning:Boolean;		private var _value:String;		public function TButton()		{			init();		}		private function init():void		{			mouseChildren = false;			alpha = 0;			_buttonShowning = false;			addListeners();		}		private function addListeners():void		{			addEventListener(MouseEvent.MOUSE_OVER, handleMouseEvent);			addEventListener(MouseEvent.MOUSE_OUT, handleMouseEvent);		}		private function removeListeners():void		{			removeEventListener(MouseEvent.MOUSE_OVER, handleMouseEvent);			removeEventListener(MouseEvent.MOUSE_OUT, handleMouseEvent);		}		private function handleMouseEvent(e:MouseEvent):void		{			switch (e.type)			{				case MouseEvent.MOUSE_OVER :					mouseOverFX();					break;				case MouseEvent.MOUSE_OUT :					mouseOutFX();					break;				default :					break;			}		}		public function showButton(d$:Number = 0):void		{			alpha = 0;			visible = true;						if (_active)			{				new TweenLite(this,TWEEN_SPEED,{alpha:BUTTON_OFF,delay:d$,onComplete:buttonShowing});				buttonMode = true;			}			else			{				new TweenLite(this,TWEEN_SPEED,{alpha:BUTTON_DISABLED,delay:d$,onComplete:buttonShowing});				buttonMode = false;			}		}		private function buttonShowing():void		{			_buttonShowning = true;			buttonMode = true;		}		public function hideButton():void		{			new TweenLite(this,TWEEN_SPEED,{alpha:0, onComplete:destroy});			_buttonShowning = false;		}		public function toggleButton(b$:Boolean=false):void		{			_active = b$;			if (! _active)			{				alpha = BUTTON_DISABLED;				buttonMode = false;			}			else			{				alpha = BUTTON_OFF;				buttonMode = true;			}		}		protected function mouseOverFX():void		{			if (_active && _buttonShowning)			{				new TweenLite(this,TWEEN_SPEED,{alpha:1});			}		}		protected function mouseOutFX():void		{			if (_active && _buttonShowning)			{				new TweenLite(this,TWEEN_SPEED,{alpha:BUTTON_OFF});			}		}		public function get active():Boolean		{			return _active;		}		public function set buttonValue(v$:String):void		{			_value = v$;		}		public function get buttonValue():String		{			return _value;		}		private function reset():void		{		}		private function destroy():void		{			visible = false;		}	}}