package com.starz.view.components{	import flash.display.MovieClip;	import flash.events.MouseEvent;	import com.greensock.TweenLite;	import com.starz.view.screens.base.TrainingScreen;	public class DragDropMC extends MovieImageLoader	{		private static const TWEEN_SPEED:Number = .2;		private var _dropTarget:DragDropTarget;		private var _dropped:Boolean;		private var _startingX:Number;		private var _startingY:Number;		private var _startingRotation:Number;		private var _startingScale:Number;		private var _targetRectangle:Array;		public function DragDropMC()		{			init();		}		private function init():void		{			_dropped = false;			_startingX = x;			_startingY = y;			_startingRotation = rotation;			_startingScale = scaleX;			hidden = false;			buttonMode = true;			mouseChildren = false;			addEventListener(MouseEvent.CLICK, changeIndex);			addEventListener(MouseEvent.MOUSE_DOWN, startDragging);			addEventListener(MouseEvent.MOUSE_UP, stopDragging);		}		private function determineDropArea():void		{			_targetRectangle = new Array();			_targetRectangle.push(_dropTarget.x - .5*(_dropTarget.width));			_targetRectangle.push(_dropTarget.y - .5*(_dropTarget.height));			_targetRectangle.push(_dropTarget.x + .5*(_dropTarget.width));			_targetRectangle.push(_dropTarget.y + .5*(_dropTarget.height));		}		private function changeIndex(e:MouseEvent):void		{			TrainingScreen(this.parent).setChildIndex(this, TrainingScreen(this.parent).numChildren-1);		}		private function startDragging(e:MouseEvent):void		{			if (! _dropped)			{				determineDropArea();				new TweenLite(this,TWEEN_SPEED,{scaleX:1,scaleY:1,rotation:0});				startDrag();			}		}		private function stopDragging(e:MouseEvent):void		{			stopDrag();			_dropped = true;			new TweenLite(this,TWEEN_SPEED,{scaleX:_startingScale,scaleY:_startingScale});			if (checkDrop())			{				_dropped = true;				buttonMode = false;				new TweenLite(this,TWEEN_SPEED,{x:_dropTarget.x,y:_dropTarget.y,onComplete:completeDrop});			}			else			{				_dropTarget.giveHint();				returnToStartPosition();			}		}		private function completeDrop():void		{			_dropTarget.receiveDrop(this);		}		private function checkDrop():Boolean		{			var hit:Boolean = false;			if ((x>_targetRectangle[0])&&(y>_targetRectangle[1])&&(x<_targetRectangle[2])&&(y<_targetRectangle[3]))			{				hit = true;			}			return hit;		}		private function returnToStartPosition():void		{			new TweenLite(this,TWEEN_SPEED,{x:_startingX,y:_startingY,rotation:_startingRotation,onComplete:reset});		}		public function set targetMC(t$:DragDropTarget):void		{			_dropTarget = t$;		}		private function reset():void		{			_dropped = false;		}	}}