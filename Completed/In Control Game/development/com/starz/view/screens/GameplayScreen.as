package com.starz.view.screens{	import com.starz.view.GameScreen;	import com.starz.events.GameEvent;	import flash.events.Event;	import com.greensock.TweenLite;	import flash.events.MouseEvent;	import com.starz.events.AnalyticsEvent;	import com.starz.constants.Achievements;	import com.starz.core.media.audio.AudioPlayer;	public class GameplayScreen extends GameScreen	{		private static const VIDEO_PREVIEW_1:String = 'http://www.starz.com/videos/boss_teaser2.flv';		private static const VIDEO_PREVIEW_2:String = 'http://www.starz.com/videos/Sps2_Trailer_Coming_Jan_2012.flv';		private static const VIDEO_PREVIEW_3:String = 'http://www.starz.com/videos/JustGoWithItTrailer.flv';		private static const PAUSE:Number = 1.5;		private var _previewCount:Number = 1;		private var _bgTween:TweenLite;		private var _remoteTween:TweenLite;		private var _cursorTween:TweenLite;		private var _footerTween:TweenLite;		private var _tvTween:TweenLite;		private var _clicks:Number;		public function GameplayScreen():void		{			init();		}		private function init():void		{			reset();			addListeners();			videoPreview.visible = false;		}		override protected function addListeners():void		{			tvWall.addEventListener(GameEvent.ROUND_COMPLETE,endRound);			tvWall.addEventListener(GameEvent.PREVIEW_CLICK,playPreview);			tvWall.addEventListener(GameEvent.GOOD_CLICK,goodTV);			tvWall.addEventListener(GameEvent.BAD_CLICK,brokenTV);			tvWall.addEventListener(GameEvent.BONUS_CLICK,bonusTV);			tvWall.addEventListener(MouseEvent.CLICK,handleClick);			videoPreview.addEventListener(GameEvent.START_GAME,closePreview);		}		public function setDifficulty(timerSpeed:Number)		{			tvWall.setDifficulty(timerSpeed);		}		public function animate():void		{			myCursor.show();			_bgTween = new TweenLite(bg,.5,{alpha:1});			_remoteTween = new TweenLite(remote,.5,{alpha:1});			_cursorTween = new TweenLite(myCursor,.5,{alpha:1});			_tvTween = new TweenLite(tvWall,.5,{alpha:1});			_footerTween = new TweenLite(footer,.5,{alpha:1});			tvWall.startRound();			footer.startAnimations();			_clicks = 0;			playMusic(new GameplayMusic(), true);		}		private function handleClick(e:MouseEvent):void		{			_clicks++;		}		private function playPreview(e:GameEvent):void		{			pauseMusic();			switch (_previewCount)			{				case 1 :					videoPreview.playPreview(VIDEO_PREVIEW_1);					_previewCount++;					break;				case 2 :					videoPreview.playPreview(VIDEO_PREVIEW_2);					_previewCount++;					break;				case 3 :					videoPreview.playPreview(VIDEO_PREVIEW_3);					_previewCount = 1;					break;			}			analytics("Preview Watched");			tvWall.pauseRound();		}		private function brokenTV(e:GameEvent):void		{			playSoundFX(new BrokenFX  ,true);			analytics("TV Broken");		}		private function goodTV(e:GameEvent):void		{			playSoundFX(new GoodFX  ,true);		}		private function bonusTV(e:GameEvent):void		{			playSoundFX(new BonusFX  ,true);			analytics("Bonus");		}		private function closePreview(e:GameEvent):void		{			resumeMusic();			tvWall.resumeRound();		}		private function endRound(e:GameEvent):void		{			if (_clicks == 0)			{				achievement(Achievements.DEAD_BATTERIES);			}			footer.stopAnimations();			pauseGame(PAUSE,new Array(startTrivia),new Array(null));		}		private function startTrivia():void		{			analytics("Gameplay Round Completed");			myCursor.hide();			dispatchEvent(new GameEvent(GameEvent.LEVEL_COMPLETE));		}	}}